---

# PostgreSQL variables

# Define the encrypted SQL password variable outside the nested structures due
# to the issue described in https://stackoverflow
# .com/questions/50770524/ansible-vault-inline-variable-with-to-nice-json
# -unexpected-templating-type-erro
sql_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  32306133336163633436383866626230323566343063313838333434376165643564623639636539
  3364613464633139363831393161636431663630326539660a643730366362343839646132653739
  65313566356235303839373336333761373232376262306236646365653931656337636439643065
  6338326561616333610a333834306337333431643338666236386138613333633137373834356663
  62373965396338303236383964646131623934373439663163396239393938336334643437613838
  3762353166616631636234653538643336396663303236303833

# GitLab variables.
gitlab_deploy_token_username: "fightfor-alembic-deployer"
gitlab_deploy_token_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  64316662313632346234376132313139393530616461393966393933373862636263646364643164
  3138353434663965663836636463653765646332373935640a616436363164313565343839643032
  32636536343632316164393033656361636166663237613734396231323734396637663533353761
  3234333739396466370a626466366239613338366237373164373533666533386538616161323034
  39613633336362346433373433336433346532333533633230356237633166316435

# PostgreSQL Server Settings.
postgresql_python_library: "python-psycopg2"

# PostgreSQL Databases.
postgresql_databases:
  - name: "fightfor"
    port: 5432
  - name: "test"
    port: 5432

# PostgreSQL Users.
postgresql_users:
  - name: "{{ system.user }}"
    password: "{{ sql_password }}"
    port: 5432
  - name: "ct_ingester"
    password: "{{ sql_password }}"
    port: 5432
  - name: "mt_ingester"
    password: "{{ sql_password }}"
    port: 5432
  - name: "pubmed_ingester"
    password: "{{ sql_password }}"
    port: 5432
  - name: "ffgraphql"
    password: "{{ sql_password }}"
    port: 5432
  - name: "mp_ingester"
    password: "{{ sql_password }}"
    port: 5432

# PostgreSQL schemata.
postgresql_schemata:
  - clinicaltrials
  - pubmed
  - mesh
  - app
  - medline

# PostgreSQL extensions.
postgresql_extensions:
  - pg_trgm
  - postgis

# PostgreSQL privileges.
postgresql_privileges:
  # ---------------------------------------------------------------
  # Grant all privileges to the `fightfor` database to each DB user
  # ---------------------------------------------------------------
  # GRANT ALL PRIVILEGES ON DATABASE fightfor TO fightfor_alembic;
  - db: fightfor
    privs: ALL
    type: database
    obj: fightfor
    role: "{{ system.user }}"
    schema: ""
  # GRANT ALL PRIVILEGES ON DATABASE fightfor TO ct_ingester;
  - db: fightfor
    privs: ALL
    type: database
    obj: fightfor
    role: "ct_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON DATABASE fightfor TO mt_ingester;
  - db: fightfor
    privs: ALL
    type: database
    obj: fightfor
    role: "mt_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON DATABASE fightfor TO pubmed_ingester;
  - db: fightfor
    privs: ALL
    type: database
    obj: fightfor
    role: "pubmed_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON DATABASE fightfor TO mp_ingester;
  - db: fightfor
    privs: ALL
    type: database
    obj: fightfor
    role: "mp_ingester"
    schema: ""
  # -------------------------------------------------------------------------
  # Grant full usage of the `clinicaltrials` schema to the `ct_ingester` user
  # -------------------------------------------------------------------------
  # GRANT USAGE ON SCHEMA clinicaltrials TO ct_ingester;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "clinicaltrials"
    role: "ct_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA clinicaltrials TO ct_ingester;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "ct_ingester"
    schema: clinicaltrials
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA clinicaltrials TO ct_ingester;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "ct_ingester"
    schema: clinicaltrials
  # ---------------------------------------------------------------
  # Grant full usage of the `mesh` schema to the `ct_ingester` user
  # ---------------------------------------------------------------
  # GRANT USAGE ON SCHEMA mesh TO ct_ingester;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "mesh"
    role: "ct_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA mesh TO ct_ingester;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "ct_ingester"
    schema: mesh
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA mesh TO ct_ingester;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "ct_ingester"
    schema: mesh
  # ---------------------------------------------------------------
  # Grant full usage of the `mesh` schema to the `mt_ingester` user
  # ---------------------------------------------------------------
  # GRANT USAGE ON SCHEMA mesh TO mt_ingester;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "mesh"
    role: "mt_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA mesh TO mt_ingester;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "mt_ingester"
    schema: mesh
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA mesh TO mt_ingester;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "mt_ingester"
    schema: mesh
  # ---------------------------------------------------------------------
  # Grant full usage of the `pubmed` schema to the `pubmed_ingester` user
  # ---------------------------------------------------------------------
  # GRANT USAGE ON SCHEMA pubmed TO pubmed_ingester;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "pubmed"
    role: "pubmed_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA pubmed TO pubmed_ingester;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "pubmed_ingester"
    schema: pubmed
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA pubmed TO pubmed_ingester;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "pubmed_ingester"
    schema: pubmed
  # -------------------------------------------------------------------
  # Grant full usage of the `mesh` schema to the `pubmed_ingester` user
  # -------------------------------------------------------------------
  # GRANT USAGE ON SCHEMA mesh TO pubmed_ingester;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "mesh"
    role: "pubmed_ingester"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA mesh TO pubmed_ingester;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "pubmed_ingester"
    schema: mesh
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA mesh TO pubmed_ingester;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "pubmed_ingester"
    schema: mesh
  # -------------------------------------------------------------
  # Grant full usage of the `mesh` schema to the `ffgraphql` user
  # -------------------------------------------------------------
  # GRANT USAGE ON SCHEMA mesh TO ffgraphql;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "mesh"
    role: "ffgraphql"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA mesh TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: mesh
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA mesh TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: mesh
  # ---------------------------------------------------------------
  # Grant full usage of the `pubmed` schema to the `ffgraphql` user
  # ---------------------------------------------------------------
  # GRANT USAGE ON SCHEMA pubmed TO ffgraphql;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "pubmed"
    role: "ffgraphql"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA pubmed TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: pubmed
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA pubmed TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: pubmed
  # -----------------------------------------------------------------------
  # Grant full usage of the `clinicaltrials` schema to the `ffgraphql` user
  # -----------------------------------------------------------------------
  # GRANT USAGE ON SCHEMA clinicaltrials TO ffgraphql;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "clinicaltrials"
    role: "ffgraphql"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA clinicaltrials TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: clinicaltrials
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA clinicaltrials TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: clinicaltrials
  # ------------------------------------------------------------
  # Grant full usage of the `app` schema to the `ffgraphql` user
  # ------------------------------------------------------------
  # GRANT USAGE ON SCHEMA app TO ffgraphql;
  - db: fightfor
    privs: USAGE
    type: schema
    obj: "app"
    role: "ffgraphql"
    schema: ""
  # GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA app TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: table
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: app
  # GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA app TO ffgraphql;
  - db: fightfor
    privs: ALL
    type: sequence
    obj: ALL_IN_SCHEMA
    role: "ffgraphql"
    schema: app

project:
  name: "fightfor-alembic"

system:
  # User name.
  user: "fightfor_alembic"
  # User group.
  group: "fightfor_alembic"
  # Application directories.
  directories:
    config: "/etc/{{ project.name }}"
    share: "/usr/local/share/{{ project.name }}"
    run: "/var/run/{{ project.name }}"
    log: "/var/log/{{ project.name }}"
    virtual_env: "/usr/local/share/{{ project.name }}/venvs/{{ project.name }}"

# Application Configuration Settings.
config:
  test:
    # General Settings.
    logger_level: DEBUG

    # PostgreSQL Server Configuration Settings.
    sql_host: "localhost"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "test"

  dev:
    # General Settings.
    logger_level: DEBUG

    # PostgreSQL Server Configuration Settings.
    sql_host: "localhost"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "fightfor"

  prod:
    # General Settings.
    logger_level: INFO

    # PostgreSQL Server Configuration Settings.
    sql_host: "localhost"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "fightfor"
